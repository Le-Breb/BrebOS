# Generic Makefile that builds any program in a subdirectory of $(SRC_DIR)/programs.
# This file is copied by $(SRC_DIR)/programs/Makefile in every subdirectory of
# $(SRC_DIR)/programs before being called.

EXEC_NAME=$(shell basename $(CURDIR))
SRC = $(shell find -name '*.cpp')
OBJECTS= $(SRC:%.cpp=$(BUILD_DIR)/%.o)
CC = i686-elf-gcc
CFLAGS = -m32 -nostdlib -nostdinc -fno-builtin -fno-stack-protector -nostartfiles -nodefaultlibs -Wall -Wextra -Werror \
-c -fno-exceptions -fno-rtti  -MMD -MP
AS = nasm
ASFLAGS = -f elf -F dwarf
LDFLAGS = -T ../link_program.ld -melf_i386 -L../../libc/build/ -lc -dynamic-linker /dynlk
ifdef RELEASE
CFLAGS += -O3
ASFLAGS += -O3
else
CFLAGS += -O0 -g
ASFLAGS += -O0 -g
LDFLAGS += -g
endif
libgcc=$(shell $(CC) $(CFLAGS) -print-libgcc-file-name)
BUILD_DIR=build
CPPFLAGS=-I../../libc -I./

GCC_BUILD_DIR=../../gcc/build
CRTI_OBJ=$(GCC_BUILD_DIR)/crti.o
CRTBEGIN_OBJ:=$(shell $(CC) $(CFLAGS) -print-file-name=crtbegin.o)
CRTEND_OBJ:=$(shell $(CC) $(CFLAGS) -print-file-name=crtend.o)
CRTN_OBJ=$(GCC_BUILD_DIR)/crtn.o
OBJ_LIST=$(CRTI_OBJ) $(CRTBEGIN_OBJ) $(OBJECTS) $(CRTEND_OBJ) $(CRTN_OBJ)
INTERNAL_OBJS=$(CRTI_OBJ) $(OBJECTS) $(CRTN_OBJ)

LIBC_PATH := ../../libc/build/libc.so

all: ../build/$(EXEC_NAME)

-include $(OBJECTS:.o=.d)

$(BUILD_DIR)/.dir_timestamp: 
	@mkdir -p $(BUILD_DIR)
	@touch $(BUILD_DIR)/.dir_timestamp

$(LIBC_PATH):
	+make -C ../../libc

../build/$(EXEC_NAME): $(BUILD_DIR)/.dir_timestamp $(OBJECTS) $(LIBC_PATH)
	ld $(LDFLAGS) -o ../build/$(EXEC_NAME) ../start_program.o $(OBJ_LIST) $(libgcc)

$(BUILD_DIR)/%.o: %.cpp
	@mkdir -p $(dir $@)
	$(CC) $(CPPFLAGS) $(CFLAGS) $< -o $@
$(BUILD_DIR)/%.o: %.s
	$(AS) $(ASFLAGS) $< -o $@

clean:
	rm -rf $(BUILD_DIR)
	rm -rf ./Makefile
